{{! Generate a unique ID for the tab menu. }}
{{assign 'uid' (uid 'tab-menu--')}}

{{! Generate unique IDs for the tab menu items. }}
{{#each tabs}}

  {{! Generate a unique ID for the tab if not already given. }}
  {{#if (not this.uid)}}{{assign 'uid' (combine 'tab--' (dashcase (lowercase label)))}}{{/if}}

  {{! Save the updated tab menu items. }}
  {{storagePush 'tabs' this}}

{{/each}}

{{! Update the tab menu items. }}
{{assign 'tabs' (storageGet 'tabs')}}

{{! Determine the active tab. }}
{{#if (gt (length (filterWhere tabs 'selected' true '===')) 0)}}
  {{assign 'selected' (itemAt (filterWhere tabs 'selected' true '===') 0)}}
{{else}}
  {{assign 'selected' (itemAt tabs 0)}}
{{/if}}

{{#unless (eq noscript true)}}
  <eul-tab-menu inline-template
                :defaults="{
                  selected: {
                    value: {{JSONstringify selected.value}},
                    uid: {{JSONstringify selected.uid}}
                  }
                }"
                :relay="{{#if relay}}{{JSONstringify relay}}{{else}}null{{/if}}"
                :uid="{{JSONstringify this.uid}}"
                v-cloak>

    <div>

      {{! Default tab menu - This displays only on tablet and desktop screens. }}
      <div class="tab-menu{{#if theme}} -{{theme}}{{/if}}" data-uid="{{this.uid}}">
        {{#each tabs}}

          {{! Determine if the tab should be active. }}
          {{#if (eq ../selected.uid this.uid)}}{{assign 'active' true}}{{else}}{{assign 'active' false}}{{/if}}

          {{> atoms-tab menu=../uid search=(default ../search false)}}

        {{/each}}
      </div>

      {{! Dropdown tab menu - This displays only on mobile screens. }}
      <div class="tab-menu -dropdown{{#if theme}} -{{theme}}{{/if}}" data-uid="{{this.uid}}">
        <select v-model="selected"
                @change="change">
          {{#each tabs}}
            <option :value="{
              value: {{JSONstringify value}},
              uid: {{JSONstringify this.uid}}
            }" data-uid="{{this.uid}}">{{label}}</option>
          {{/each}}
        </select>
      </div>

    </div>

  </eul-tab-menu>
{{/unless}}

{{#unless (eq noscript true)}}<noscript>{{/unless}}
  <div class="tab-menu -noscript{{#if theme}} -{{theme}}{{/if}}">
    {{#each tabs}}

    {{! Determine if the tab should be active. }}
    {{#if (eq ../selected.uid this.uid)}}{{assign 'active' true}}{{else}}{{assign 'active' false}}{{/if}}

      {{> atoms-tab noscript=true uid=this.uid group=../uid search=(default ../search false)}}

    {{/each}}
  </div>
{{#unless (eq noscript true)}}</noscript>{{/unless}}
